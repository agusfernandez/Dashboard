1) instalar Formik (permite automatizacion de validaaciones de forms)
npm install formik --save
https://formik.org/docs/overview

2) crear carpeta pages > Login>index.js (toma ek index.js //como un export const)
3) include Formik _ initialValues{{ objeto}}
el valor del name tiene q tener la misma nomenclatura entre los iniital values 
4) include Form (de Formik)

error!! me dio un error cuando agregue los <></> en el app.js y een el formik (probar de sacarlos)

-useFormik es un hook de formik que permite usar las validaciones de formik en otras librerias

5) yup es una libreria de npm // permite generar validaciones
https://www.npmjs.com/package/yup

npm i yup
import * from yup (trae todo lo que hay en yup bajo yup)
esquema de validacion del formulario // validationShema
Yup.object

//validationShema : ingresar la logica de la validacion

6) instalar material
https://material-ui.com/

npm install @material-ui/icons
npm install @material-ui/core

OJO que cambio la version de material

7) import TextForm
import Button
import Link (new registry)

8) components > LoginForm // logica del log in con el uso de Yup y Formik como principales herrramientas de 
usar {useFormik} directamente

const Formik = useFormik({
    initalValues:{

    },
    validationSchema:Yup.object({

    }),
    onSubmit:

})

>RegisterForm
Recordar de agregar en los forms el name, id, label>

.matches (funcion de Yup que permite agregar expresiones regulares para una validacion)
valor key // clave para imprimir una vez las cosas 

const Formik = useFormik({
    initalValues:{

    },
    validationSchema:Yup.object({

    }),
    onSubmit:

})

//// checkbox information> guardar el estado de los datos de las persona q se acaba de registrar
    const [interestMovies, setInterest] = useState({
        peliculas: false,
        series: false,
        ambas: false,        
        ninguna: false
    })

    // va a recibir un evento y va  setear los intereses
    const handleCheckbox =(event) =>{
        setInterest({...interestMovies, [event.target.name]: event.target.checked})
    }
guardar la info se puede hacer a traves de Redux para ser usado en otros componentes pero por ahora se puede hacer a traves de yb estado global en app.js
Seteo el estado global y le paso la prop al page de register ( q es esta ahi mismo) // luego lo paso en Register.js y RegisterForm.js. Luego en el submite le saco la alerta y pongo el setUser
const [user, setUser] = useState({})

9) Creacion de la pagina Home /intente crearlo tipo componente pero no me funciono
-  incoporporacion de Menu/ Drawer (funcionalidad 
)
